(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{383:function(t,e,a){"use strict";a.r(e);var n=a(45),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"antd-form-item控件嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#antd-form-item控件嵌套"}},[t._v("#")]),t._v(" Antd Form.Item控件嵌套")]),t._v(" "),a("p",[t._v("这里演示 Form.Item 内有多个元素的使用方式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<Form.Item name="field" /> \n')])])]),a("p",[t._v("只会对它的直接子元素绑定表单功能，例如直接包裹了 Input/Select。如果控件前后还有一些文案或样式装点，或者一个表单项内有多个控件，你可以使用内嵌的 Form.Item 完成。你可以给 Form.Item 自定义 style 进行内联布局，或者添加 noStyle 作为纯粹的无样式绑定组件（类似 3.x 中的 getFieldDecorator）。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('- <Form.Item label="Field" name="field">\n- <Input />\n- </Form.Item>\n\n+ <Form.Item label="Field">\n+ <Form.Item name="field" noStyle><Input /></Form.Item> // 直接包裹才会绑定表单\n+ <span>description</span>\n+ </Form.Item>\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);