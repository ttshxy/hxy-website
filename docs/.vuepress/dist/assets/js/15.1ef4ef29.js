(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{380:function(t,a,s){"use strict";s.r(a);var r=s(45),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js严格模式的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js严格模式的特点"}},[t._v("#")]),t._v(" js严格模式的特点")]),t._v(" "),s("h3",{attrs:{id:"一、开启严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、开启严格模式"}},[t._v("#")]),t._v(" 一、开启严格模式")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),t._v("\n")])])]),s("h3",{attrs:{id:"二、严格模式的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、严格模式的特点"}},[t._v("#")]),t._v(" 二、严格模式的特点")]),t._v(" "),s("h4",{attrs:{id:"_1、变量使用前必须声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、变量使用前必须声明"}},[t._v("#")]),t._v(" 1、变量使用前必须声明")]),t._v(" "),s("h4",{attrs:{id:"_2、禁用with关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、禁用with关键字"}},[t._v("#")]),t._v(" 2、禁用with关键字")]),t._v(" "),s("p",[t._v("with 语句的原本用意是为逐级的对象访问提供命名空间式的速写方式. 也就是在指定的代码区域, 直接通过节点名称调用对象。")]),t._v(" "),s("p",[t._v("with 通常被当做重复引用同一个对象中的多个属性的快捷方式，可以不需要重复引用对象本身。")]),t._v(" "),s("p",[t._v("比如，目前现在有一个这样的对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var obj = {\n\ta: 1,\n\tb: 2,\n\tc: 3\n};\n")])])]),s("p",[t._v("如果想要改变 obj 中每一项的值，一般写法可能会是这样：// 重复写了3次的“obj”")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("obj.a = 2;\nobj.b = 3;\nobj.c = 4;\n")])])]),s("p",[t._v("而用了 with 的写法，会有一个简单的快捷方式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("with (obj) {\n\ta = 3;\n\tb = 4;\n\tc = 5;\n}\n")])])]),s("p",[t._v("在这段代码中，使用了 with 语句关联了 obj 对象，这就以为着在 with 代码块内部，每个变量首先被认为是一个局部变量，如果局部变量与 obj 对象的某个属性同名，则这个局部变量会指向 obj 对象属性。")]),t._v(" "),s("h4",{attrs:{id:"_3、eval函数有自己的作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、eval函数有自己的作用域"}},[t._v("#")]),t._v(" 3、eval函数有自己的作用域")]),t._v(" "),s("h4",{attrs:{id:"_4、禁止this指向window"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、禁止this指向window"}},[t._v("#")]),t._v(" 4、禁止this指向window")]),t._v(" "),s("p",[t._v("非严格模式下会默认指向window")]),t._v(" "),s("h4",{attrs:{id:"_5、函数参数不能重名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、函数参数不能重名"}},[t._v("#")]),t._v(" 5、函数参数不能重名")])])}),[],!1,null,null,null);a.default=e.exports}}]);