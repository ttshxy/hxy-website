(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{431:function(t,a,r){"use strict";r.r(a);var s=r(45),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"什么是virtual-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是virtual-dom"}},[t._v("#")]),t._v(" 什么是Virtual DOM")]),t._v(" "),r("p",[t._v("Virtual DOM是对DOM的抽象,本质上是JavaScript对象,这个对象就是更加轻量级的对DOM的描述.")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/7/30/16c3f022698a7e5f~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"2019-07-27-17-02-23"}})]),t._v(" "),r("h2",{attrs:{id:"为什么需要virtual-dom"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要virtual-dom"}},[t._v("#")]),t._v(" 为什么需要Virtual DOM")]),t._v(" "),r("p",[t._v("既然我们已经有了DOM,为什么还需要额外加一层抽象?")]),t._v(" "),r("p",[t._v("首先,我们都知道在前端性能优化的一个秘诀就是尽可能少地操作DOM,不仅仅是DOM相对较慢,更因为频繁变动DOM会造成浏览器的回流或者重回,这些都是性能的杀手,因此我们需要这一层抽象,在patch过程中尽可能地一次性将差异更新到DOM中,这样保证了DOM不会出现性能很差的情况.")]),t._v(" "),r("p",[t._v("其次,现代前端框架的一个基本要求就是无须手动操作DOM,一方面是因为手动操作DOM无法保证程序性能,多人协作的项目中如果review不严格,可能会有开发者写出性能较低的代码,另一方面更重要的是省略手动DOM操作可以大大提高开发效率.")]),t._v(" "),r("p",[t._v("最后,也是Virtual DOM最初的目的,就是更好的跨平台,比如Node.js就没有DOM,如果想实现SSR(服务端渲染),那么一个方式就是借助Virtual DOM,因为Virtual DOM本身是JavaScript对象.")])])}),[],!1,null,null,null);a.default=e.exports}}]);