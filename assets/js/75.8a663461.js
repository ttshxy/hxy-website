(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{440:function(e,n,t){"use strict";t.r(n);var a=t(45),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("权限系统设计")]),e._v(" "),t("p",[e._v("首先我们的系统可以将一个个用户分配成不同的角色，每个角色可以配置不同的功能")]),e._v(" "),t("p",[e._v("主要的权限有三类，一种是路由，一种是侧边栏模块，一种是按钮")]),e._v(" "),t("p",[e._v("这里我主要讲下前端部分")]),e._v(" "),t("p",[e._v("登录成功后我会将后台返回的权限列表放在一个对象数组中，对象数组存在redux中，判断逻辑都放到一个Author的高阶组件中")]),e._v(" "),t("p",[e._v("拆包优化\nmoment剔除国际化文件\n将react redux react-dom antd等常用包分成一个，可以利用浏览器缓存提高加载速度\n根据路由进行代码分割\n将比较大的包单独拆包并用异步加载\n提取lodash函数")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('yarn add babel-plugin-import --save-dev\n"babel": {\n  "presets": [\n   "react-app"\n  ],\n  "plugins": [\n   [\n    "import",\n    {\n     "libraryName": "antd",\n     "style": "css"\n    }\n   ]\n  ]\n')])])]),t("p",[e._v("React Activation实现Keep-alive效果")]),e._v(" "),t("p",[e._v("实现原理说起来较为简单，核心代码仅为70行。由于React会卸载掉处于固有组件层级内的组件，所以我们需要将中的组件，也就是其children属性抽取出来，渲染到一个不会被卸载的组件内，再使用DOM操作将内的真实内容移入对应，就可以实现此功能。\n本质上就是利用利用React.context 来缓存children，当cache key 匹配上时再将对应的children 挂载到对应的父节点上。")])])}),[],!1,null,null,null);n.default=r.exports}}]);